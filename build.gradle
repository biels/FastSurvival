apply plugin: 'java'
apply plugin: 'idea'
archivesBaseName = 'FastSurvival'
version = '3.13'

repositories {
    mavenCentral()
    maven {
        url "https://hub.spigotmc.org/nexus/content/repositories/snapshots"
    }
    maven {
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}
//def defaultEncoding = 'UTF-8'
//compileJava {
//    options.encoding = defaultEncoding
//}
//compileTestJava {
//    options.encoding = defaultEncoding
//}
dependencies {
//    compile fileTree(dir: 'lib', include: '*.jar')
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    compile 'org.apache.commons:commons-io:1.3.2'
    compileOnly 'org.projectlombok:lombok:1.18.10'
    compileOnly "org.bukkit:bukkit:1.15.1-R0.1-SNAPSHOT"
    compileOnly "org.spigotmc:spigot-api:1.15.1-R0.1-SNAPSHOT"
    testCompileOnly "org.spigotmc:spigot-api:1.15.1-R0.1-SNAPSHOT"
    compile group: 'org.joml', name: 'joml', version: '1.9.20'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    testCompile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'

    testCompileOnly(
            'junit:junit:4.12'
    )
    testImplementation(
            'org.junit.jupiter:junit-jupiter-api:5.1.0'
    )
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.1.0',
            'org.junit.vintage:junit-vintage-engine:5.1.0',
            'org.junit.platform:junit-platform-launcher:1.1.0',
            'org.junit.platform:junit-platform-runner:1.1.0'
    )
    implementation 'org.jetbrains:annotations:15.0'
}

test {
    useJUnitPlatform()
}
idea {
    project{
        languageLevel '1.8'
    }
    module {
        downloadJavadoc = true // defaults to false
        downloadSources = true
    }
}
jar {
    doFirst {
        from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    }
}
//task fatJar(type: Jar) {
//    manifest.from jar.manifest
////    classifier = 'all'
//    from {
//        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//    } {
//        exclude "META-INF/*.SF"
//        exclude "META-INF/*.DSA"
//        exclude "META-INF/*.RSA"
//    }
//    with jar
//}
//artifacts {
//    archives fatJar
//}